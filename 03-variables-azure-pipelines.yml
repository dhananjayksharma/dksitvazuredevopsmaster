trigger:
 - main
 - releases/*
 
pool:
  vmImage: 'Ubuntu 20.04'
# Set MyRunNumber
variables: 
  MyRunNumber: '1.0.0-CIDKSITV-$(Build.BuildNumber)'
  SonarProjectKey: 'infotechvedasindia_udemydevopscoursetestproject'
  Env: 'prod'

stages:
- stage: BuildAndTest
  displayName: "Add Stratgey yml"
  jobs:
  - template: 01-strategy.yaml
#echo ${{ variables.one }} # outputs initialValue
#     echo $(one)
- stage: Build
  jobs:
  - job: TestVarDependencies
    variables:
      myVarFromJobADebug: $(A.environment)
    steps:
      - bash: echo "I am testing step 1:" ${{variables.myVarFromJobADebug}}
      - bash: echo "I am testing step 2:" $(A.environment)
      - bash: echo "I am testing step 3:" $(environment)
    

  - job: FirstJob
    steps: 
      - bash: echo Build FirstJob
      - bash: echo $(firstJobVariable)
      - bash: echo "MyRunNumber:"$(MyRunNumber)
      # - bash: echo $(Build.SourceBranchName) 
      # - bash: echo $(Build.SourcesDirectory) 
      # - bash: echo $(System.DefaultWorkingDirectory) 
      # - bash: echo $(Build.ArtifactStagingDirectory) 
      # - bash: echo "Build.DefinitionName" $(Build.DefinitionName) 
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/*.yml
            **/*.tf
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - bash: ls -R $(Build.ArtifactStagingDirectory)
       
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'



  # - job: TestVar 
  #   condition: eq(variables(myVarFromJobADebug), 'qaenv')
  #   steps:
  #   - bash: echo "I am in QA MyRunNumber:"$(MyRunNumber)
  #   - task: SonarCloudPrepare@1
  #     inputs:
  #       SonarCloud: 'SonarClaudTokenServiceConnection'
  #       organization: 'infotechvedasindia'
  #       scannerMode: 'CLI'
  #       configMode: manual
  #       cliProjectKey: udemydevopscoursetestproject
  #       extraProperties: |
  #         sonar.projectKey=infotechvedasindia_udemydevopscoursetestproject
  #         sonar.projectName=udemydevopscoursetestproject
  #         sonar.sources=.
  #         sonar.exclusions=**/*_test.go
  #         sonar.tests=.  
  #   - task: SonarCloudAnalyze@1

  #   - task: SonarCloudPublish@1
  #     inputs:
  #       pollingTimeoutSec: '300'

  # - job: SecondJob
  #   steps:
  #     - bash: echo Build SecondJob